<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://1198560751.github.io/qweqwe/</id>
    <title>nie</title>
    <updated>2020-06-28T08:08:17.013Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://1198560751.github.io/qweqwe/"/>
    <link rel="self" href="https://1198560751.github.io/qweqwe/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://1198560751.github.io/qweqwe/images/avatar.png</logo>
    <icon>https://1198560751.github.io/qweqwe/favicon.ico</icon>
    <rights>All rights reserved 2020, nie</rights>
    <entry>
        <title type="html"><![CDATA[git的操作命令]]></title>
        <id>https://1198560751.github.io/qweqwe/post/git-de-cao-zuo-ming-ling/</id>
        <link href="https://1198560751.github.io/qweqwe/post/git-de-cao-zuo-ming-ling/">
        </link>
        <updated>2020-06-28T07:26:56.000Z</updated>
        <content type="html"><![CDATA[<h4 id="git的操作命令">git的操作命令</h4>
<figure data-type="image" tabindex="1"><img src="https://pic3.zhimg.com/v2-6c555038a6fcab439cf97b0bc150a498_r.jpg" alt="preview" loading="lazy"></figure>
<h5 id="问题1">问题1：</h5>
<figure data-type="image" tabindex="2"><img src="https://1198560751.github.io/qweqwe//post-images/1593329366418.png" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="3"><img src="https://1198560751.github.io/qweqwe//post-images/1593329372703.png" alt="" loading="lazy"></figure>
<p>https://www.cnblogs.com/sjhsszl/p/8708471.html</p>
<h5 id="问题2">问题2：</h5>
<figure data-type="image" tabindex="4"><img src="https://1198560751.github.io/qweqwe//post-images/1593329378625.png" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="5"><img src="https://1198560751.github.io/qweqwe//post-images/1593329382780.png" alt="" loading="lazy"></figure>
<h5 id="问题3">问题3：</h5>
<ul>
<li>如果想要上传的时候增加文件操作</li>
</ul>
<pre><code class="language-shell">git add .
git commit -m &quot;add ?&quot;
git push
</code></pre>
<ul>
<li>如果想要上传不是同一个文件夹里的东西，需要git pull在本地同步然后上传</li>
</ul>
<pre><code class="language-shell">git add .
git commit -m &quot;add ?&quot;

#如果这个文件夹是新的，没有上传过的
git remote add origin https://?

git pull --rebase origin master  #这个--后面可加可不加
git push -u origin master  #这个-u后面的第一次需要加，后面的如果还是这个分支，可加可不加
</code></pre>
<h5 id="正常的git上传文件">正常的git上传文件：</h5>
<p>…or create a new repository on the command line</p>
<pre><code class="language-shell">echo &quot;# admin&quot; &gt;&gt; README.md
git init
git add README.md
git commit -m &quot;first commit&quot;
git remote add origin https://github.com/1198560751/admin.git
git push -u origin master
#然后第二次补充文件  
git add .
git commit -m &quot;?&quot;
git push
</code></pre>
<h5 id="git常用的命令">git常用的命令</h5>
<pre><code class="language-shell">常用的命令

git status --查看当前代码状态，改动，所在分支，是否有代码冲突等

git branch -a --查看当前主干下有哪些分支

git checkout --切换分支

git diff --查看分支代码改动 
</code></pre>
<h5 id="git-删除方法">git 删除方法：</h5>
<pre><code class="language-shell">$ git pull origin master                    # 将远程仓库里面的项目拉下来

$ dir                                                # 查看有哪些文件夹

$ git rm -r --cached .idea              # 删除.idea文件夹

$ git commit -m '删除.idea'        # 提交,添加操作说明

$ git push -u origin master               # 将本次更改更新到github项目上去
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[java相关配置]]></title>
        <id>https://1198560751.github.io/qweqwe/post/java-xiang-guan-pei-zhi/</id>
        <link href="https://1198560751.github.io/qweqwe/post/java-xiang-guan-pei-zhi/">
        </link>
        <updated>2020-06-25T13:13:12.000Z</updated>
        <content type="html"><![CDATA[<h4 id="安装idea配置java18环境">安装idea配置java1.8环境</h4>
<h4 id=""></h4>
<h4 id="一安装jdk配置jdk环境">一.安装jdk，配置jdk环境</h4>
<p>1.下载jdk1.8，然后安装到文件夹，需要英文文件夹</p>
<figure data-type="image" tabindex="1"><img src="C:%5CUsers%5C%E5%9C%A8%E4%BA%BA%E9%97%B4%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200625180439435.png" alt="image-20200625180439435" loading="lazy"></figure>
<p>2.环境变量配置</p>
<p>①在系统变量中加入JAVA_HOME 值是jdk路径</p>
<p><img src="C:%5CUsers%5C%E5%9C%A8%E4%BA%BA%E9%97%B4%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200625182052605.png" alt="0" loading="lazy">②在系统变量的path中加入</p>
<figure data-type="image" tabindex="2"><img src="C:%5CUsers%5C%E5%9C%A8%E4%BA%BA%E9%97%B4%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200625182156334.png" alt="image-20200625182156334" loading="lazy"></figure>
<figure data-type="image" tabindex="3"><img src="C:%5CUsers%5C%E5%9C%A8%E4%BA%BA%E9%97%B4%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200625182203848.png" alt="image-20200625182203848" loading="lazy"></figure>
<p>然后保存。</p>
<p>进行测试：打开cm，查看-version</p>
<figure data-type="image" tabindex="4"><img src="C:%5CUsers%5C%E5%9C%A8%E4%BA%BA%E9%97%B4%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200625182614809.png" alt="image-20200625182614809" loading="lazy"></figure>
<p>进行java代码测试</p>
<pre><code class="language-java">Hello.java

public class Hello{
	public static void main(String [] args){
		System.out.print(&quot;Hello,Word!&quot;);
	}
}
</code></pre>
<figure data-type="image" tabindex="5"><img src="C:%5CUsers%5C%E5%9C%A8%E4%BA%BA%E9%97%B4%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200625182927006.png" alt="image-20200625182927006" loading="lazy"></figure>
<h4 id="二安装idea">二.安装idea</h4>
<figure data-type="image" tabindex="6"><img src="C:%5CUsers%5C%E5%9C%A8%E4%BA%BA%E9%97%B4%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200625185941294.png" alt="image-20200625185941294" loading="lazy"></figure>
<h4 id="三创建的目录">三.创建的目录</h4>
<p>idea ideaxiangmu javawenjian  .idea  .IntelliJIdea2019.3</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[git的使用]]></title>
        <id>https://1198560751.github.io/qweqwe/post/git-de-shi-yong/</id>
        <link href="https://1198560751.github.io/qweqwe/post/git-de-shi-yong/">
        </link>
        <updated>2020-06-24T03:47:38.000Z</updated>
        <content type="html"><![CDATA[<!-- more -->
<p>👏  欢迎使用 <strong>Gridea</strong> ！</p>
<ul>
<li>1.git遇到问题，就是我还原之后log里只有到还原到的地方，后面的都没了</li>
</ul>
<pre><code class="language-bash">HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit_id。

穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本。

要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本
</code></pre>
<pre><code class="language-shell">// 放弃单个文件修改,注意不要忘记中间的&quot;--&quot;,不写就成了检出分支了!
git checkout -- filepathname
// 放弃所有的文件修改
git checkout .  
</code></pre>
<p>git操作手册 https://gitee.com/progit/</p>
<ul>
<li>进行撤回记录中的任意一个</li>
</ul>
<pre><code class="language-shell">在人间@LAPTOP-PDIKKH3V MINGW64 /e/微信小程序的创建的项目文档/123123 (master)
$ git log --oneline
700b141 (HEAD -&gt; master) zai yici
25f4035 ceshi1
76cf0a9 条件渲染
f6b237b di er ci
a636ddd new html

在人间@LAPTOP-PDIKKH3V MINGW64 /e/微信小程序的创建的项目文档/123123 (master)
$ git status
On branch master
Changes to be committed:
  (use &quot;git restore --staged &lt;file&gt;...&quot; to unstage)
        modified:   pages/index/index.wxml

Changes not staged for commit:
  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)
  (use &quot;git restore &lt;file&gt;...&quot; to discard changes in working directory)
        modified:   pages/index/index.wxml


在人间@LAPTOP-PDIKKH3V MINGW64 /e/微信小程序的创建的项目文档/123123 (master)
$ git add .

在人间@LAPTOP-PDIKKH3V MINGW64 /e/微信小程序的创建的项目文档/123123 (master)
$ git status
On branch master
Changes to be committed:
  (use &quot;git restore --staged &lt;file&gt;...&quot; to unstage)
        modified:   pages/index/index.wxml


在人间@LAPTOP-PDIKKH3V MINGW64 /e/微信小程序的创建的项目文档/123123 (master)
$ git commit -m 'jin ru li mian'
[master 192e68d] jin ru li mian
 1 file changed, 1 insertion(+), 1 deletion(-)

在人间@LAPTOP-PDIKKH3V MINGW64 /e/微信小程序的创建的项目文档/123123 (master)
$ git status
On branch master
nothing to commit, working tree clean

在人间@LAPTOP-PDIKKH3V MINGW64 /e/微信小程序的创建的项目文档/123123 (master)
$ git log --oneline
192e68d (HEAD -&gt; master) jin ru li mian
700b141 zai yici
25f4035 ceshi1
76cf0a9 条件渲染
f6b237b di er ci
a636ddd new html

#进行输入一些测试进行保存，然后直接恢复到最近一次commit的地方
在人间@LAPTOP-PDIKKH3V MINGW64 /e/微信小程序的创建的项目文档/123123 (master)
$ git status
On branch master
Changes not staged for commit:
  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)
  (use &quot;git restore &lt;file&gt;...&quot; to discard changes in working directory)
        #### modified:   pages/index/index.wxml

no changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)

在人间@LAPTOP-PDIKKH3V MINGW64 /e/微信小程序的创建的项目文档/123123 (master)
$ git checkout -- .

在人间@LAPTOP-PDIKKH3V MINGW64 /e/微信小程序的创建的项目文档/123123 (master)
$ git status
On branch master
nothing to commit, working tree clean

在人间@LAPTOP-PDIKKH3V MINGW64 /e/微信小程序的创建的项目文档/123123 (master)
$ git log --oneline
192e68d (HEAD -&gt; master) jin ru li mian
700b141 zai yici
25f4035 ceshi1
76cf0a9 条件渲染
f6b237b di er ci
a636ddd new html
-------------------------------------------
#进行返回前一条的操作，中间跨了一条记录
在人间@LAPTOP-PDIKKH3V MINGW64 /e/微信小程序的创建的项目文档/123123 (master)
$ git reset 25f4035 .
Unstaged changes after reset:
M       pages/index/index.wxml

在人间@LAPTOP-PDIKKH3V MINGW64 /e/微信小程序的创建的项目文档/123123 (master)
$ git status
On branch master
Changes to be committed:
  (use &quot;git restore --staged &lt;file&gt;...&quot; to unstage)
  #      modified:   pages/index/index.wxml

Changes not staged for commit:
  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)
  (use &quot;git restore &lt;file&gt;...&quot; to discard changes in working directory)
   #     modified:   pages/index/index.wxml


在人间@LAPTOP-PDIKKH3V MINGW64 /e/微信小程序的创建的项目文档/123123 (master)
$ git checkout -- .

在人间@LAPTOP-PDIKKH3V MINGW64 /e/微信小程序的创建的项目文档/123123 (master)
$ git status
On branch master
Changes to be committed:
  (use &quot;git restore --staged &lt;file&gt;...&quot; to unstage)
        modified:   pages/index/index.wxml


在人间@LAPTOP-PDIKKH3V MINGW64 /e/微信小程序的创建的项目文档/123123 (master)
$ git log --oneline
192e68d (HEAD -&gt; master) jin ru li mian
700b141 zai yici
25f4035 ceshi1
76cf0a9 条件渲染
f6b237b di er ci
a636ddd new html

</code></pre>
]]></content>
    </entry>
</feed>